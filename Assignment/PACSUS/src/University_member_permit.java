/* Generated by Together */

/**
 * For a description of University member permits, follow hyperlink to the
 * Administration use case for issuing a new University member permit.
 */
public class University_member_permit extends Permit {

	/**
	 * The date that this permit was issued. This information is required in
	 * case a member of the University leaves the University part way through
	 * the year and becomes eligible for a pro-rata rebate.
	 * 
	 * @label Issued on
	 * @clientCardinality 1
	 * @supplierCardinality 1
	 * @link aggregation
	 * @directed
	 */
	private Date lnkDate;

	public University_member_permit(University_member_permit p) {
		super(p);
		lnkDate = p.lnkDate;
	}

	/**
	 * Constructor for admin office use
	 * 
	 * @author Nicholas Whitton
	 * @param holder
	 *            The permit holder's name
	 * @param issuedOn
	 *            The date this permit was issued
	 */
	public University_member_permit(String holder, Date issuedOn) {
		super(holder);
		lnkDate = issuedOn;
	}

	/**
	 * In the case that the end date is before the start date, the permit will
	 * be renewed at the annual update, creating a new permit from day 1 to the
	 * finish date
	 */
	@Override
	public boolean isValid(Date date) {
		return true;
	}

	/**
	 * Gets the day the permit was issued on
	 * 
	 * @return the day the permit was issued on
	 */
	public Date getDate() {
		return lnkDate;
	}

	/**
	 * Converting all the permit info into a string used for displaying
	 */
	public String toString() {
		return "Permit Holder: " + this.getHolder() + " \nIssued on: " + lnkDate + " \n" + "Warnings: "
				+ this.getWarnings() + " \nVehicles: " + getVehicles() + " \nDays entered: " + getNoOfEntries();
	}

	@Override
	public void setDate(Date date) {
		// Method has no effect on objects of this class
	}
}
