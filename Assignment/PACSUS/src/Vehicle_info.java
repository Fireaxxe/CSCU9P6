/* Generated by Together */

/**
 * Each instance of Vehicle_info models an actual physical vehicle, so no two
 * instances may have the same registration number. There is no direct notation
 * for this. Instead the Vehicle list object collecting the Vehicles must
 * enforce it by checking new additions - the use of a HashTable in Vehicle_list
 * with the registration number as key is helpful with this.
 *
 * This class must contain at least the registration number, and may have any
 * other attributes that the University may from time to time find useful (such
 * as car make, model, colour...).
 */
public class Vehicle_info {
	/**
	 * The vehicle's registration number.(licence plate number)
	 */
	private String regNo;

	/**
	 * Each vehicle (and so each registration number) is associated with exactly
	 * one permit, which describes its authorisation to enter the campus (or
	 * not!).
	 *
	 * This attribute references the permit associated with this vehicle. It
	 * allows the permit status of any vehicle to be accessed via the
	 * Vehicle_list knowing only the registration number - for example for
	 * barrier checks, recording warnings, and so on.
	 *
	 * Note that many vehicles may be associated with the same permit.
	 * 
	 * @supplierCardinality 1
	 * @clientCardinality 1..*
	 * @label Allowed entry by
	 * @directed
	 */
	private Permit lnkPermit;

	public Vehicle_info(Vehicle_list vehicle_list, String regNo, Permit permit) {
		if (vehicle_list.getVehicle(regNo) != null && vehicle_list.getVehicle(regNo).lnkPermit != null)
		// if regNo is not equal to null and permit is not equal to null
		{
			throw new IllegalArgumentException("The given number plate is already registered.");
			// 1 regNo can only be registered once and only be connected to 1
			// permit
		}
		this.regNo = regNo;
		lnkPermit = permit;
		vehicle_list.add(this);// add vehicle regNo to vehicle_list
		permit.addVehicle(this);// link vehicle regNo to permit
	}

	/**
	 * Getter for the permit information this vehicle is assigned to
	 * 
	 * @author Nicholas Whitton
	 * @return the permit this vehicle is assigned to
	 */
	public Permit getPermit() {
		return lnkPermit;
	}

	/**
	 * Get the number plate of the vehicle used for displaying
	 */
	@Override
	public String toString() {
		return regNo;
	}

	/**
	 * Used to renew (duplicate permit for a new year) a permit that has expired
	 * 
	 * @param renewedPermit
	 */
	public void setPermit(Permit renewedPermit) {
		lnkPermit = renewedPermit;
	}

	@Override
	public boolean equals(Object o) {
		if (!(o instanceof Vehicle_info)) {
			return false;
		}
		return ((Vehicle_info) o).regNo.equals(regNo);
	}
}
