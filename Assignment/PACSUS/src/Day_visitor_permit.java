/* Generated by Together */

/**
 * For a description of Day visitors, follow hyperlink to the Administration use
 * case for issuing a new Day visitor permit.
 */
public class Day_visitor_permit extends Permit {

	/**
	 * The name of the University member hosting the visit.
	 */
	private String hostName;

	/**
	 * The date that the visitor is visiting on - entry will be allowed on that
	 * date only.
	 * 
	 * @clientCardinality 1
	 * @supplierCardinality 1
	 * @label Visiting on
	 * @link aggregation
	 * @directed
	 */
	private Date startDay;

	public Day_visitor_permit(Day_visitor_permit p) {
		super(p);
		hostName = p.hostName;
		startDay = p.startDay;
	}

	/**
	 * Constructor for admin office use
	 * 
	 * @author Nicholas Whitton
	 * @param holder
	 *            The permit holder's name
	 * @param host
	 *            The name of the visitor's host
	 * @param dayOfVisit
	 *            The date on which this permit is valid
	 */
	public Day_visitor_permit(String holder, String host, Date dayOfVisit) {
		super(holder);
		hostName = host;
		startDay = dayOfVisit;
	}

	/**
	 * In the case that the end date is before the start date, the permit will
	 * be renewed at the annual update, creating a new permit from day 1 to the
	 * finish date
	 */
	public boolean isValid(Date date) {
		return startDay.equals(date);
	}

	/**
	 * Gets the date of the visit
	 * 
	 * @return the date of the visit
	 */
	public Date getDate() {
		return startDay;
	}

	/**
	 * Getting the name of the host assigned to that permit
	 * 
	 * @return The name of the host
	 */
	public String gethost() {
		return this.hostName;
	}

	/**
	 * Converting all the permit info into a string used for displaying
	 */
	public String toString() {
		return "Permit Holder: " + this.getHolder() + " \n" + "Permit host: " + this.gethost() + " \n" + "Valid on: "
				+ this.getDate() + " \n" + "Warnings: " + this.getWarnings() + " \nVehicles: " + getVehicles()
				+ " \nDays entered: " + getNoOfEntries();
	}

	@Override
	public void setDate(Date date) {
		startDay = date;
	}
}
